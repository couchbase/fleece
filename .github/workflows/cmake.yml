# Copyright 2021-Present Couchbase, Inc.
#
# Use of this software is governed by the Business Source License included in
# the file licenses/BSL-Couchbase.txt.  As of the Change Date specified in that
# file, in accordance with the Business Source License, use of this software
# will be governed by the Apache License, Version 2.0, included in the file
# licenses/APL2.txt.

name: Build and Test

on:
  push:
    branches:
      - master
      - dev
      - 'release/*'
  pull_request:
    branches:
      - '**'

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
    runs-on: ${{ matrix.os }}


    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

#### BUILD

    - name: Create Build Environment
      # Create a build directory, as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      if: runner.os != 'Windows'
      working-directory: ${{github.workspace}}/build
      run: cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Configure CMake (Windows)
      if: runner.os == 'Windows'
      working-directory: ${{github.workspace}}/build
      run: cmake .. -A x64

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE

#### TEST

    - name: Install French Locale On Linux
      if: runner.os == 'Linux'
      shell: bash
      # One of the tests below needs the French locale installed.
      run: sudo localedef -v -c -i fr_FR -f UTF-8 fr_FR

    - name: Test
      if: runner.os != 'Windows'
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: |
        set -e
        cmake --build . --config Debug --target FleeceTests
        cd ..
        build/FleeceTests -r list 2>&1

    - name: Test On Windows
      if: runner.os == 'Windows'
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: |
        set -e
        cmake --build . --config Debug --target FleeceTests
        mkdir -p /c/tmp
        Debug/FleeceTests.exe -r list 2>&1
